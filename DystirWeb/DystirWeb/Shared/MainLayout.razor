@using DystirWeb.Services
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.SignalR.Client
@inject DystirService DystirService
@inject NavigationManager navigationManager
@inject HubConnection HubConnection
@inherits LayoutComponentBase
@implements IDisposable

<div class="main">
    @Body
</div>

@if (!IsDystirHubConnected)
{
    <div style="position:fixed; top:calc(50% - 1.5rem);left:calc(50% - 1.5rem);">
        <img src="images/icons/loadingicon.gif" style="width:3rem" />
    </div>
}

@code
{
    public bool IsDystirHubConnected { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DystirService.OnConnected += DystirService_OnConnected;
        DystirService.OnDisconnected += DystirService_OnDisconnected;
        IsDystirHubConnected = HubConnection?.State == HubConnectionState.Connected;
        Refresh();
        await Task.CompletedTask;
    }

    void IDisposable.Dispose()
    {
        DystirService.OnConnected -= DystirService_OnConnected;
        DystirService.OnDisconnected -= DystirService_OnDisconnected;
    }

    private void DystirService_OnConnected()
    {
        IsDystirHubConnected = true;
        Refresh();
    }

    private void DystirService_OnDisconnected()
    {
        IsDystirHubConnected = false;
        Refresh();
    }

    private void Refresh()
    {
        InvokeAsync(() => StateHasChanged());
    }
}