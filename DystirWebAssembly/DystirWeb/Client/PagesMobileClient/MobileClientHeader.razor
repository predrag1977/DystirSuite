@using DystirWeb.Shared
@using System.Globalization

<div class="navbar navbar-dark p-0">
    <table style="width:100%">
        <tr>
            <td style="white-space:nowrap;width:0">
                @if (selectedPage == SelectedPage.MatchDetails)
                {
                    <div class="top-row navbar navbar-dark" style="height:49px">
                        <div @onclick="@(() => { BackOnClick.InvokeAsync(); })">
                            <i class="fa fa-arrow-circle-left" aria-hidden="true" style="color:darkgray; font-size: 1.5rem"></i>
                        </div>
                    </div>
                }
            </td>
            <td style="width: 100%; white-space:nowrap;text-align:center; text-overflow:ellipsis; overflow:hidden; max-width:1px; color: darkgray;height:49px">
                @switch (selectedPage)
                {
                    case SelectedPage.Matches:
                    default:
                        <span>DYSTIR</span>
                        break;
                    case SelectedPage.Results:
                        <span>ÚRSLIT</span>
                        break;
                    case SelectedPage.Fixtures:
                        <span>KOMANDI</span>
                        break;
                    case SelectedPage.Standings:
                        <span>STØÐAN</span>
                        break;
                    case SelectedPage.Statistics:
                        <span>HAGTØL</span>
                        break;
                    case SelectedPage.MatchDetails:
                        <span>@SelectedMatch.Time?.AddMinutes(-TimeZoneOffset).ToString("ddd. dd.MM.", new CultureInfo("fo-FO")).ToUpper()</span>
                        break;
                }
            </td>
            <td style="white-space:nowrap;width:0">
                @if (selectedPage == SelectedPage.MatchDetails)
                {
                    <div class="top-row navbar navbar-dark" style="height:49px">
                        <div @onclick="@(() => { BackOnClick.InvokeAsync(); })">
                            <i class="fa fa-arrow-circle-left" aria-hidden="true" style="visibility:collapse; color:darkgray; font-size: 1.5rem"></i>
                        </div>
                    </div>
                }
            </td>
        </tr>
    </table>
</div>

@code {
    [Parameter]
    public EventCallback BackOnClick { get; set; }

    [Parameter]
    public SelectedPage selectedPage { get; set; }

    [Parameter]
    public Matches SelectedMatch { get; set; }

    [Parameter]
    public int TimeZoneOffset { get; set; }

    private async Task Test() => await BackOnClick.InvokeAsync();
}

