@using DystirWeb.Services
@inject DystirWebClientService DystirWebClientService
@implements IDisposable

<div class="news" style="background-color:#333;border:0;margin:2rem 0.5rem;padding: 1rem 0.7rem;border-radius:1rem">
    <div style="font-size:0.8rem;">13.04.2023</div>
    <div style="color:white;font-weight:bold">Viku liðið - 5. umfar</div>
    <div style="text-align:center;font-weight:bold">
            <img src="files/news/team_of_the_week.png" align="middle" style="width: 90%; max-width: 550px;margin: 0.5rem 0.5rem;border-radius:0.8rem" />
    </div>
    <div>
        ÍF serliga væl umboða við 4 leikarum.
    </div>
</div>

<!--<div class="news" style="background-color:#333;border:0;margin:2rem 0.5rem;padding: 1rem 0.7rem;border-radius:1rem">-->
@*<div style="font-size:0.8rem;">17.01.2021</div>*@
@*<div style="text-align:center;font-weight:bold">
        <a style="color:white;text-decoration:none" href="mailto: dystir@dystir.fo">
            <img src="files/news/find_sponsors.gif" align="left" style="width: 23%; max-width: 230px;margin: 0.5rem 0.5rem 0 0;border-radius:0.8rem" />
        </a>
    </div>*@
<!--<div style="color:white;font-weight:bold">Fá tína lýsing á forsíðuna</div>
    <div>
        Skal tín lýsing síggjast á dystir.fo, sjálvandi bæði á heimasíðuni og á appini. Tað er til dømis møguligt, at hava eina forsíðulýsing og ella á einari undirsíðu. Lýsingar kunnu verða í ymiskum støddum eftir nærri avtalu.
        Tú kanst keypa eitt ella fleiri lýsingapláss.<br />
        Kostnaður úr <span style="color:white">333 kr/mðn umframt MVG</span>, við keyp av fleiri plássum fæst mongdar avsláttur. Vit vilja fegin hoyra frá tær.<br />
        Send okkum eini boð, við at skriva til
        <span style="text-align:center;font-weight:bold">
            <a style="color:white;text-decoration:underline" href="mailto: dystir@dystir.fo">
                <span>dystir@dystir.fo</span>
            </a>
        </span>
    </div>
</div>-->



@code {

    protected override async Task OnInitializedAsync()
    {
        //DystirService.TimerService.OnSponsorsTimerElapsed += SponsorsTimerElapsed;
        await Task.CompletedTask;
    }

    void IDisposable.Dispose()
    {
        //DystirService.TimerService.OnSponsorsTimerElapsed -= SponsorsTimerElapsed;
    }

    private void SponsorsTimerElapsed(object sender, EventArgs e)
    {
        //Refresh();
    }

    private void Refresh()
    {
        //DystirService.Sponsors = new ObservableCollection<Models.Sponsors>(DystirService.Sponsors?.OrderBy(a => Guid.NewGuid()));
        //InvokeAsync(() => StateHasChanged());
    }
}
